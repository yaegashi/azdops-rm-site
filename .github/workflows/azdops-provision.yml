name: AZD Ops Provision

on:
  workflow_dispatch:

permissions:
  contents: write
  id-token: write

env:
  AZDOPS_TEMPLATE: azdops-rm-site
  AZD_INPUTS_FILE: .github/azdops/${{ github.ref_name }}/inputs.yml
  AZD_REMOTE_FILE: .github/azdops/${{ github.ref_name }}/remote.yml

jobs:
  azdops-provision:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Load AZD Ops inputs.yml
        uses: actions-tools/yaml-outputs@v2
        id: inputs
        with:
          file-path: ${{ env.AZD_INPUTS_FILE }}
      - name: Load AZD Ops remote.yml if exists
        if: ${{ hashFiles(env.AZD_REMOTE_FILE) != '' }}
        uses: actions-tools/yaml-outputs@v2
        id: remote
        with:
          file-path: ${{ env.AZD_REMOTE_FILE }}
      - name: Azure CLI
        id: azure-cli
        uses: ./.github/actions/azure-cli
        env:
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      - name: Azure Developer CLI
        uses: Azure/setup-azd@v2.0.0
      - name: AZD Provision
        shell: bash
        run: |
          set -x
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          BRANCH_NAME="${GITHUB_REF_NAME}"
          ENV_NAME="${REPO_NAME}-${BRANCH_NAME}"
          ./azdops.sh auth-config
          if test -n "$AZD_REMOTE_ENV_STORAGE_ACCOUNT_NAME" -a "$AZD_REMOTE_ENV_NAME" = "$ENV_NAME"; then
            ./azdops.sh load --no-prompt
          else
            azd env new $ENV_NAME
          fi
          azd env set AZURE_SUBSCRIPTION_ID $AZURE_SUBSCRIPTION_ID
          azd env set AZURE_LOCATION $AZURE_LOCATION
          if test -n "$AZURE_PRINCIPAL_ID"; then
            azd env set AZURE_PRINCIPAL_ID $AZURE_PRINCIPAL_ID
          fi
          if test -n "$AZURE_RESOURCE_GROUP_NAME"; then
            azd env set AZURE_RESOURCE_GROUP_NAME $AZURE_RESOURCE_GROUP_NAME
          fi
          azd env set BASE_RESOURCE_GROUP_NAME $BASE_RESOURCE_GROUP_NAME
          azd env set APP_ROOT_PATH $APP_ROOT_PATH
          azd env set DNS_ZONE_SUBSCRIPTION_ID $DNS_ZONE_SUBSCRIPTION_ID
          azd env set DNS_ZONE_RESOURCE_GROUP_NAME $DNS_ZONE_RESOURCE_GROUP_NAME
          azd env set DNS_ZONE_NAME $DNS_ZONE_NAME
          azd env set DNS_RECORD_NAME $DNS_RECORD_NAME
          azd env set MS_TENANT_ID $MS_TENANT_ID
          azd env set MS_CLIENT_ID $MS_CLIENT_ID
          if test -n "$MS_ALLOWED_GROUP_ID"; then
            azd env set MS_ALLOWED_GROUP_ID $MS_ALLOWED_GROUP_ID
          fi
          azd env set APP_CERTIFICATE_EXISTS false
          azd provision --no-prompt
          ./rmsiteops.sh meid-redirect --no-prompt
          ./rmsiteops.sh meid-secret --no-prompt
      - name: AZD Remote Environment
        shell: bash
        run: |
          set -x
          GITHUB_README_FILE=.github/README.md
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          BRANCH_NAME="${GITHUB_REF_NAME}"
          ENV_NAME="${REPO_NAME}-${BRANCH_NAME}"
          ./azdops.sh save --no-prompt
          mkdir -p "${AZD_REMOTE_FILE%/*}"
          cat <<EOF >$AZD_REMOTE_FILE
          AZD_REMOTE_ENV_NAME: $(azd env get-value AZURE_ENV_NAME)
          AZD_REMOTE_ENV_STORAGE_ACCOUNT_NAME: $(azd env get-value AZURE_STORAGE_ACCOUNT_NAME)
          AZD_REMOTE_ENV_KEY_VAULT_NAME: $(azd env get-value AZURE_KEY_VAULT_NAME)
          EOF
          if ! test -r $GITHUB_README_FILE; then
          cat <<EOF >$GITHUB_README_FILE
          # ${ENV_NAME} (${AZDOPS_TEMPLATE} instance)

          - AZD Ops README: [README.md](../README.md)
          - AZD Inputs File: [${AZD_INPUTS_FILE}](../${AZD_INPUTS_FILE})
          - AZD Remote File: [${AZD_REMOTE_FILE}](../${AZD_REMOTE_FILE})
          EOF
          fi
          echo "I: Updating $GITHUB_README_FILE and $AZD_REMOTE_FILE"
          git add $GITHUB_README_FILE $AZD_REMOTE_FILE
          if git diff --cached --exit-code --quiet; then
            echo 'I: No changes to commit'
          else
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git commit -m "Update $AZD_REMOTE_FILE"
            git push
          fi